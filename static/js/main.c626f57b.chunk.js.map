{"version":3,"sources":["components/container/containerStyles.js","components/container/Event.js","components/container/LeagueDetails.js","components/container/teams/TeamComponent.js","components/container/PreviousVote.js","components/container/VoteButtons.js","components/container/Container.js","components/header/Header.js","components/header/headerStyles.js","App.js","serviceWorker.js","index.js"],"names":["containerStyles","isSmallScreen","makeStyles","root","width","height","sportPaper","display","fontWeight","statusPaper","button","margin","props","value","classes","window","screen","Paper","elevation","className","LeagueDetails","leagueStyle","leagueStyles","pollData","style","group","country","TeamComponent","this","type","name","vsDiv","homePaper","fontSize","React","Component","withStyles","teamStyles","PreviousVote","previousPoll","vote","VoteButtons","onPollClick","Button","onClick","variant","color","PollComponent","useState","resultData","setResultData","randomPoll","setRandomPoll","useEffect","refinedResultData","filter","poll","pollHistory","findIndex","historyPoll","id","randomPollInitial","length","getRandomPoll","localStorage","get","find","Event","sport","state","homeName","awayName","team","previousPollIndex","push","splice","set","pollIndexInResult","nextPoll","Math","floor","random","Header","left","backgroundImage","textAlign","verticalAlign","lineHeight","fontStyle","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c626f57b.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function containerStyles(isSmallScreen) {\r\n    const classes = makeStyles({\r\n        root:{\r\n            width: isSmallScreen ? '100%' : '80%',\r\n            height: isSmallScreen ? '80%' : '100%'\r\n        },\r\n        sportPaper: {\r\n            width: isSmallScreen ? '25%' : '15%',\r\n            height: isSmallScreen ? '10%' : '20%',\r\n            display: 'inline-block',\r\n            fontWeight: 'bold',\r\n        },\r\n        statusPaper: {\r\n            width: isSmallScreen ? '25%' : '15%',\r\n            height: isSmallScreen ? '10%' : '20%',\r\n            display: 'inline-block',\r\n            fontWeight: 'bold'\r\n        },\r\n        button: {\r\n            width: '20%',\r\n            margin: '0 5% 0 5%'\r\n        }\r\n    })();\r\n    \r\n    return classes;\r\n\r\n}\r\n\r\nexport function leagueStyles(isSmallScreen) {\r\n    return { \r\n        width: isSmallScreen ? '50%' : '70%',\r\n        display: 'inline-block'\r\n    };\r\n}","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport containerStyles from './containerStyles';\r\n\r\nexport default function(props) {\r\n    const { display, value } = props;\r\n    const isSmallScreen = window.screen.width < 800;\r\n    const classes = containerStyles(isSmallScreen);\r\n    return (\r\n        <Paper elevation={5} classes={{root: display==='sport' ? classes.sportPaper : classes.statusPaper}}>\r\n            <div className='pollSport'>\r\n                {value}\r\n            </div>\r\n        </Paper>\r\n    );\r\n}","import React from 'react';\r\nimport { leagueStyles } from './containerStyles';\r\nexport default function LeagueDetails(props){\r\n    const isSmallScreen = window.screen.width < 800;\r\n    const leagueStyle = leagueStyles(isSmallScreen);\r\n    const { pollData } = props;\r\n    return (\r\n        <div style={leagueStyle}>\r\n                    <div className='pollHeader pollGroup'>{pollData.group}</div>\r\n                    <div className='pollHeader pollCountry'>{pollData.country}</div>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core'; \r\nimport teamStyles from './teamStyles';\r\n\r\nclass TeamComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.isSmallScreen = window.screen.width < 800;\r\n    }\r\n    render() {\r\n        const { type, name, classes } = this.props;\r\n        \r\n        return (\r\n            <Paper elevation={0} classes={{root: type==='Vs' ? classes.vsDiv : classes.homePaper}}>\r\n                <div className={'pollTeam poll'+type} style={{fontSize: this.isSmallScreen ? '25px' : '40px'}}>\r\n                    {name}\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(teamStyles)(TeamComponent);","import React from 'react';\r\n\r\nexport default function PreviousVote(props) {\r\n    const { previousPoll } = props;\r\n    return (\r\n        previousPoll ? <div className='pollHistory'>You have previously voted: \r\n                <div className='historyVote'>\r\n                    {previousPoll.vote}\r\n                </div> . Please clear local storage to vote freshly</div> : ''\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport containerStyles from './containerStyles';\r\n\r\nexport default function VoteButtons(props){\r\n    const isSmallScreen = window.screen.width < 800;\r\n    const classes = containerStyles(isSmallScreen);\r\n    const { onPollClick } = props;\r\n    return (\r\n        <div>\r\n            <Button onClick={onPollClick('Home')} classes={{root: classes.button}} variant='contained' color='primary'>Home Team</Button>\r\n            <Button onClick={onPollClick('Draw')} classes={{root: classes.button}} variant='contained'>Draw</Button>\r\n            <Button onClick={onPollClick('Away')} classes={{root: classes.button}} variant='contained' color='secondary'>Away Team</Button>\r\n        </div>\r\n    );\r\n}","import localStorage from 'local-storage';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Event from './Event';\r\nimport LeagueDetails from './LeagueDetails';\r\nimport TeamComponent from './teams/TeamComponent';\r\nimport PreviousVote from './PreviousVote';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport pollData from '../../static/PollData';\r\nimport containerStyles from './containerStyles';\r\nimport VoteButtons from './VoteButtons';\r\n\r\n\r\nexport default function PollComponent(){\r\n    const isSmallScreen = window.screen.width < 800;\r\n    const classes = containerStyles(isSmallScreen);\r\n    let [resultData, setResultData] = useState([]);\r\n    const [randomPoll, setRandomPoll] = useState({});\r\n\r\n    useEffect(() => {\r\n        const refinedResultData = pollData.filter( poll => {\r\n            const historyIndex = pollHistory.findIndex(historyPoll => historyPoll.id === poll.id);\r\n            return historyIndex  === -1;\r\n        });\r\n        setResultData(refinedResultData);\r\n        const randomPollInitial = resultData.length ? getRandomPoll(resultData) : getRandomPoll(pollData);\r\n        setRandomPoll(randomPollInitial);\r\n    },[]);\r\n    \r\n    function onPollClick(team){\r\n        return function(){\r\n            let pollHistory = localStorage.get('pollHistory') || [];\r\n            \r\n            const previousPollIndex = pollHistory.findIndex(poll => poll.id === randomPoll.id);\r\n            if(previousPollIndex === -1) {\r\n                pollHistory.push({\r\n                    id: randomPoll.id,\r\n                    vote: team\r\n                });\r\n            } else {\r\n                pollHistory.splice(previousPollIndex,1, {id: randomPoll.id, vote: team});\r\n            }\r\n            localStorage.set('pollHistory', pollHistory);\r\n            const pollIndexInResult = resultData.findIndex(poll => poll.id === randomPoll.id);\r\n            resultData.splice(pollIndexInResult,1);\r\n            const nextPoll = resultData.length ? getRandomPoll(resultData) : getRandomPoll(pollData);\r\n            setRandomPoll(nextPoll);\r\n        }\r\n    } \r\n    \r\n    const pollHistory = localStorage.get('pollHistory') || [];\r\n    const previousPoll = pollHistory.find(poll => poll.id === randomPoll.id);\r\n\r\n    return(\r\n        <Paper elevation={1} classes={{root: classes.root}}>\r\n            <>\r\n                <Event display='sport' value= {randomPoll.sport} />\r\n                <LeagueDetails pollData={randomPoll} />\r\n                <Event display='status' value= {randomPoll.state} /> \r\n            </>\r\n            <>\r\n                <TeamComponent type='Home' name={randomPoll.homeName} />\r\n                <TeamComponent type='Vs' name='VS' />\r\n                <TeamComponent type='Away' name={randomPoll.awayName} />\r\n            </>\r\n            <>\r\n                <VoteButtons onPollClick = {onPollClick} />\r\n                <PreviousVote previousPoll={previousPoll} />\r\n            </>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport function getRandomPoll(pollData) {\r\n    const randomIndex = Math.floor(Math.random()*pollData.length);\r\n    const randomPoll = pollData[randomIndex];\r\n    return randomPoll;\r\n}","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport headerStyles from './headerStyles';\r\n\r\nexport default function Header (){\r\n    const classes = headerStyles();\r\n    return (\r\n        <Paper classes={{root: classes.root}} elevation={1}>\r\n          Sports Poll\r\n      </Paper>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function headerStyles() {\r\n    return makeStyles({\r\n        root: {\r\n            display: 'table',\r\n            margin: '0 0 0 30%',\r\n            width: '40%',\r\n            left: '30%',\r\n            height: '7%',\r\n            backgroundImage: 'linear-gradient(to bottom right, green, white)',\r\n            textAlign: 'center',\r\n            verticalAlign: 'middle',\r\n            lineHeight: '90px',\r\n            fontStyle: 'italic', \r\n            fontSize:'larger', \r\n            fontWeight: 'bold'\r\n        }\r\n      })();\r\n}","import React from 'react';\nimport Container from './components/container/Container';\nimport Header from './components/header/Header';\nimport './static/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className='pollDiv'>\n        <Container />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}